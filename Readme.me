Steps:

- Run vagrant up
- ssh to the vm as vagrant ssh k8se2emaster
- start the Kubernetes cluster using the following command
        vagrant@k8se2emaster:~$ sudo kubeadm init --apiserver-advertise-address=192.168.30.11 --pod-network-cidr=192.168.0.0/16
        Note: if it fail and you get the swap issue do the following
        1- open the /etc/systemd/system/kubelet.service.d/10-kubeadm.conf file
            $ sudo vi /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
        2- add the following line then save and close
            Environment="KUBELET_EXTRA_ARGS=--fail-swap-on=false"
        3- disable swap and restart kubelet
            $ sudo swapoff -a
            $ sudo systemctl daemon-reload
            $ sudo systemctl restart kubelet
        4- create k8s cluster using
            $ sudo kubeadm init --apiserver-advertise-address=192.168.30.11 --pod-network-cidr=192.168.0.0/16 --ignore-preflight-errors Swap
        Note: Use the command output in order to setup the kubectl command config:
            vagrant@k8se2emaster:~$ mkdir -p $HOME/.kube
            vagrant@k8se2emaster:~$ sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
            vagrant@k8se2emaster:~$ sudo chown $(id -u):$(id -g) $HOME/.kube/config

        Note: in the minion VMs you will do the same swap steps and use the join command instead for example:
        vagrant@k8se2eminion1:~$ sudo kubeadm join 192.168.30.11:6443 --token bntqkx.5y1rox8th85qavvo --discovery-token-ca-cert-hash sha256:52e9f5d7732e8e6fcc65aed86a50016dd8c8e7b2aab7b44af18ac99c8fcfa750 --ignore-preflight-errors Swap

- Check the kubeadm wiki in order to setup the networking plugin that u want to use; https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/#instructions. In this deployment we use calico networking plugin. Execute the 2 following commands in order to setup the networking plugin.
    vagrant@k8se2emaster:~$ kubectl apply -f https://docs.projectcalico.org/v3.1/getting-started/kubernetes/installation/hosted/rbac-kdd.yaml
    vagrant@k8se2emaster:~$ kubectl apply -f https://docs.projectcalico.org/v3.1/getting-started/kubernetes/installation/hosted/kubernetes-datastore/calico-networking/1.7/calico.yaml        

- In order to create pods example use the following commands
        vagrant@k8se2emaster:~$ sudo kubectl create namespace sock-shop
        vagrant@k8se2emaster:~$ sudo kubectl apply -n sock-shop -f "https://github.com/microservices-demo/microservices-demo/blob/master/deploy/kubernetes/complete-demo.yaml?raw=true"
    - check the pods status by execute
        vagrant@k8se2emaster:~$ sudo kubectl -n sock-shop get pods -o wide
